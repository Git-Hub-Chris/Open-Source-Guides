#!/usr/bin/env ruby
# Get all contributors who have created an issue, pull request, comment, or
# pushed a commit.
#
# Usage:
# $ GITHUB_TOKEN=xxx script/sync-contributors

require "bundler/setup"
require "octokit"
require "json"
require "yaml"
require "active_support/core_ext/hash/keys"

client = Octokit::Client.new(
  access_token: ENV["GITHUB_TOKEN"],
  auto_paginate: true,
  per_page: 100
)
repo = "github/open-source-handbook"

$contributors = {}

def add_contribution(user)
  contributor = $contributors[user.login] ||= user.to_h.stringify_keys
  contributor["contributions"] ||= 0
  contributor["contributions"] += user["contributions"] || 1
end

puts "Getting issue authors…"
client.list_issues(repo, state: "all").each do |issue|
  add_contribution(issue.user)
end

puts "Getting issue commenters…"
client.issues_comments(repo).each do |comment|
  add_contribution(comment.user)
end

puts "Getting pull request authors…"
client.pull_requests(repo, state: "all").each do |pull|
  add_contribution(pull.user)
end

puts "Getting pull request commenters…"
client.pull_requests_comments(repo).each do |comment|
  add_contribution(comment.user)
end

puts "Getting commit contributions…"
client.contributors(repo).each do |user|
  add_contribution(user)
end

contribution_count = $contributors.values.inject(0) {|sum, u| sum + u["contributions"] }
puts "Fetched #{contribution_count} contributions from #{$contributors.size} people"

sorted = $contributors.values.sort_by {|user| user["contributions"] }.reverse
warning = "# Do not edit. This file is generated by script/sync-contributors.\n"
File.write "_data/contributors.yml", warning + YAML.dump(sorted)
